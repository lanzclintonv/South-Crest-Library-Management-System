#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SouthCrestLMS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SouthCrestLibManSys")]
	public partial class LibManSysDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBook_info(Book_info instance);
    partial void UpdateBook_info(Book_info instance);
    partial void DeleteBook_info(Book_info instance);
    partial void InsertUser_info(User_info instance);
    partial void UpdateUser_info(User_info instance);
    partial void DeleteUser_info(User_info instance);
    partial void InsertBorrower_info(Borrower_info instance);
    partial void UpdateBorrower_info(Borrower_info instance);
    partial void DeleteBorrower_info(Borrower_info instance);
    partial void InsertRecord_info(Record_info instance);
    partial void UpdateRecord_info(Record_info instance);
    partial void DeleteRecord_info(Record_info instance);
    partial void InsertTransaction_info(Transaction_info instance);
    partial void UpdateTransaction_info(Transaction_info instance);
    partial void DeleteTransaction_info(Transaction_info instance);
    #endregion
		
		public LibManSysDataContext() : 
				base(global::SouthCrestLMS.Properties.Settings.Default.SouthCrestLibManSysConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LibManSysDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibManSysDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibManSysDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibManSysDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Book_info> Book_infos
		{
			get
			{
				return this.GetTable<Book_info>();
			}
		}
		
		public System.Data.Linq.Table<User_info> User_infos
		{
			get
			{
				return this.GetTable<User_info>();
			}
		}
		
		public System.Data.Linq.Table<Borrower_info> Borrower_infos
		{
			get
			{
				return this.GetTable<Borrower_info>();
			}
		}
		
		public System.Data.Linq.Table<Record_info> Record_infos
		{
			get
			{
				return this.GetTable<Record_info>();
			}
		}
		
		public System.Data.Linq.Table<Transaction_info> Transaction_infos
		{
			get
			{
				return this.GetTable<Transaction_info>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book_info")]
	public partial class Book_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BookID;
		
		private int _Qty;
		
		private string _Title;
		
		private string _Author;
		
		private string _Publisher;
		
		private string _ISBN;
		
		private System.DateTime _DateAdded;
		
		private string _Category;
		
		private string _Status;
		
		private EntitySet<Transaction_info> _Transaction_infos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIDChanging(string value);
    partial void OnBookIDChanged();
    partial void OnQtyChanging(int value);
    partial void OnQtyChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Book_info()
		{
			this._Transaction_infos = new EntitySet<Transaction_info>(new Action<Transaction_info>(this.attach_Transaction_infos), new Action<Transaction_info>(this.detach_Transaction_infos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int NOT NULL")]
		public int Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="Date NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_info_Transaction_info", Storage="_Transaction_infos", ThisKey="BookID", OtherKey="BookID")]
		public EntitySet<Transaction_info> Transaction_infos
		{
			get
			{
				return this._Transaction_infos;
			}
			set
			{
				this._Transaction_infos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transaction_infos(Transaction_info entity)
		{
			this.SendPropertyChanging();
			entity.Book_info = this;
		}
		
		private void detach_Transaction_infos(Transaction_info entity)
		{
			this.SendPropertyChanging();
			entity.Book_info = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_info")]
	public partial class User_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User_info()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Borrower_info")]
	public partial class Borrower_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Type;
		
		private string _Surname;
		
		private string _Firstname;
		
		private string _Grade;
		
		private string _Section;
		
		private string _CallNo;
		
		private string _Address;
		
		private string _Status;
		
		private EntitySet<Transaction_info> _Transaction_infos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnSectionChanging(string value);
    partial void OnSectionChanged();
    partial void OnCallNoChanging(string value);
    partial void OnCallNoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Borrower_info()
		{
			this._Transaction_infos = new EntitySet<Transaction_info>(new Action<Transaction_info>(this.attach_Transaction_infos), new Action<Transaction_info>(this.detach_Transaction_infos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this.OnSectionChanging(value);
					this.SendPropertyChanging();
					this._Section = value;
					this.SendPropertyChanged("Section");
					this.OnSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CallNo
		{
			get
			{
				return this._CallNo;
			}
			set
			{
				if ((this._CallNo != value))
				{
					this.OnCallNoChanging(value);
					this.SendPropertyChanging();
					this._CallNo = value;
					this.SendPropertyChanged("CallNo");
					this.OnCallNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Borrower_info_Transaction_info", Storage="_Transaction_infos", ThisKey="ID", OtherKey="ID")]
		public EntitySet<Transaction_info> Transaction_infos
		{
			get
			{
				return this._Transaction_infos;
			}
			set
			{
				this._Transaction_infos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transaction_infos(Transaction_info entity)
		{
			this.SendPropertyChanging();
			entity.Borrower_info = this;
		}
		
		private void detach_Transaction_infos(Transaction_info entity)
		{
			this.SendPropertyChanging();
			entity.Borrower_info = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Record_info")]
	public partial class Record_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReferenceID;
		
		private System.DateTime _ReturnDate;
		
		private string _BookID;
		
		private string _ID;
		
		private EntityRef<Transaction_info> _Transaction_info;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReferenceIDChanging(int value);
    partial void OnReferenceIDChanged();
    partial void OnReturnDateChanging(System.DateTime value);
    partial void OnReturnDateChanged();
    partial void OnBookIDChanging(string value);
    partial void OnBookIDChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    #endregion
		
		public Record_info()
		{
			this._Transaction_info = default(EntityRef<Transaction_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReferenceID
		{
			get
			{
				return this._ReferenceID;
			}
			set
			{
				if ((this._ReferenceID != value))
				{
					if (this._Transaction_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceID = value;
					this.SendPropertyChanged("ReferenceID");
					this.OnReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="Date NOT NULL")]
		public System.DateTime ReturnDate
		{
			get
			{
				return this._ReturnDate;
			}
			set
			{
				if ((this._ReturnDate != value))
				{
					this.OnReturnDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnDate = value;
					this.SendPropertyChanged("ReturnDate");
					this.OnReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_info_Record_info", Storage="_Transaction_info", ThisKey="ReferenceID", OtherKey="ReferenceID", IsForeignKey=true)]
		public Transaction_info Transaction_info
		{
			get
			{
				return this._Transaction_info.Entity;
			}
			set
			{
				Transaction_info previousValue = this._Transaction_info.Entity;
				if (((previousValue != value) 
							|| (this._Transaction_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction_info.Entity = null;
						previousValue.Record_info = null;
					}
					this._Transaction_info.Entity = value;
					if ((value != null))
					{
						value.Record_info = this;
						this._ReferenceID = value.ReferenceID;
					}
					else
					{
						this._ReferenceID = default(int);
					}
					this.SendPropertyChanged("Transaction_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transaction_info")]
	public partial class Transaction_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReferenceID;
		
		private string _BookID;
		
		private string _ID;
		
		private System.DateTime _BorrowDate;
		
		private System.DateTime _DueDate;
		
		private int _FineAmount;
		
		private string _FineStatus;
		
		private EntityRef<Record_info> _Record_info;
		
		private EntityRef<Book_info> _Book_info;
		
		private EntityRef<Borrower_info> _Borrower_info;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReferenceIDChanging(int value);
    partial void OnReferenceIDChanged();
    partial void OnBookIDChanging(string value);
    partial void OnBookIDChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBorrowDateChanging(System.DateTime value);
    partial void OnBorrowDateChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnFineAmountChanging(int value);
    partial void OnFineAmountChanged();
    partial void OnFineStatusChanging(string value);
    partial void OnFineStatusChanged();
    #endregion
		
		public Transaction_info()
		{
			this._Record_info = default(EntityRef<Record_info>);
			this._Book_info = default(EntityRef<Book_info>);
			this._Borrower_info = default(EntityRef<Borrower_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReferenceID
		{
			get
			{
				return this._ReferenceID;
			}
			set
			{
				if ((this._ReferenceID != value))
				{
					this.OnReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceID = value;
					this.SendPropertyChanged("ReferenceID");
					this.OnReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					if (this._Book_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Borrower_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowDate", DbType="Date NOT NULL")]
		public System.DateTime BorrowDate
		{
			get
			{
				return this._BorrowDate;
			}
			set
			{
				if ((this._BorrowDate != value))
				{
					this.OnBorrowDateChanging(value);
					this.SendPropertyChanging();
					this._BorrowDate = value;
					this.SendPropertyChanged("BorrowDate");
					this.OnBorrowDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="Date NOT NULL")]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineAmount", DbType="Int NOT NULL")]
		public int FineAmount
		{
			get
			{
				return this._FineAmount;
			}
			set
			{
				if ((this._FineAmount != value))
				{
					this.OnFineAmountChanging(value);
					this.SendPropertyChanging();
					this._FineAmount = value;
					this.SendPropertyChanged("FineAmount");
					this.OnFineAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FineStatus
		{
			get
			{
				return this._FineStatus;
			}
			set
			{
				if ((this._FineStatus != value))
				{
					this.OnFineStatusChanging(value);
					this.SendPropertyChanging();
					this._FineStatus = value;
					this.SendPropertyChanged("FineStatus");
					this.OnFineStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_info_Record_info", Storage="_Record_info", ThisKey="ReferenceID", OtherKey="ReferenceID", IsUnique=true, IsForeignKey=false)]
		public Record_info Record_info
		{
			get
			{
				return this._Record_info.Entity;
			}
			set
			{
				Record_info previousValue = this._Record_info.Entity;
				if (((previousValue != value) 
							|| (this._Record_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Record_info.Entity = null;
						previousValue.Transaction_info = null;
					}
					this._Record_info.Entity = value;
					if ((value != null))
					{
						value.Transaction_info = this;
					}
					this.SendPropertyChanged("Record_info");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_info_Transaction_info", Storage="_Book_info", ThisKey="BookID", OtherKey="BookID", IsForeignKey=true)]
		public Book_info Book_info
		{
			get
			{
				return this._Book_info.Entity;
			}
			set
			{
				Book_info previousValue = this._Book_info.Entity;
				if (((previousValue != value) 
							|| (this._Book_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book_info.Entity = null;
						previousValue.Transaction_infos.Remove(this);
					}
					this._Book_info.Entity = value;
					if ((value != null))
					{
						value.Transaction_infos.Add(this);
						this._BookID = value.BookID;
					}
					else
					{
						this._BookID = default(string);
					}
					this.SendPropertyChanged("Book_info");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Borrower_info_Transaction_info", Storage="_Borrower_info", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Borrower_info Borrower_info
		{
			get
			{
				return this._Borrower_info.Entity;
			}
			set
			{
				Borrower_info previousValue = this._Borrower_info.Entity;
				if (((previousValue != value) 
							|| (this._Borrower_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Borrower_info.Entity = null;
						previousValue.Transaction_infos.Remove(this);
					}
					this._Borrower_info.Entity = value;
					if ((value != null))
					{
						value.Transaction_infos.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(string);
					}
					this.SendPropertyChanged("Borrower_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
